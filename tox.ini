[tox]
min_version = 4.3.3
isolated_build = true
envlist = 
    py3{11, 12, 13}
    flake8
    black
    bandit
    mypy
    pip-missing-reqs
    pypi
skip_missing_interpreters = true
skipdist = true

[gh-actions]
python =
    3.11: py311
    3.12: py312, flake8, black, bandit, pip-missing-reqs, pypi, mypy
    3.13: py313

[base]
python = python3.12
package = ai4_metadata

[pytest]
addopts = -p no:warnings

[testenv]
usedevelop = True
allowlist_externals =
    poetry
    find
    rm
    mkdir
    twine
setenv =
   VIRTUAL_ENV={envdir}
   LC_ALL=en_US.utf-8
commands_pre =
    poetry install --no-root --sync --with test,test-{envname}
commands =
    find . -type f -name "*.pyc" -delete
    poetry run pytest {posargs}

[testenv:py311]
basepython = python3.11
commands_pre =
    poetry install --no-root --sync --with test

[testenv:py312]
basepython = python3.12
commands_pre =
    poetry install --no-root --sync --with test

[testenv:py313]
basepython = python3.13
commands_pre =
    poetry install --no-root --sync --with test

[testenv:py314]
basepython = python3.14
commands_pre =
    poetry install --no-root --sync --with test

[testenv:cov]
basepython = python3.12
commands_pre =
    poetry install --no-root --sync --with test
commands =
    find . -type f -name "*.pyc" -delete
    poetry run pytest {posargs} --cov={[base]package} \
           --cov-report term \
           --cov-report=html

[testenv:covxml]
basepython = python3.12
commands_pre =
    poetry install --no-root --sync --with test
commands =
    find . -type f -name "*.pyc" -delete
    poetry run pytest {posargs} --cov={[base]package} \
           --cov-report=xml

[flake8]
# Black default line length is 88
max-line-length = 88 
show-source = True
builtins = _
ignore = B008,F722,F821,TYP006,W503
exclude = 
    .venv
    .git
    .tox
    dist
    doc
    *lib/python*
    *egg
    build

[testenv:flake8]
basepython = {[base]python}
commands =
  poetry run flake8 src/{[base]package}

[testenv:black]
basepython = {[base]python}
commands = 
    poetry run black --check --diff src/{[base]package}

[testenv:bandit]
basepython = {[base]python}
commands = 
    poetry run bandit -r src/{[base]package} -x tests 

[testenv:pypi]
basepython = {[base]python}
commands =
    poetry publish --build --dry-run

[testenv:mypy]                                                                  
description = Static type checks                              
basepython = {[base]python}
setenv =
    MYPYPATH=src
commands =
    poetry run mypy --config-file mypy.ini -p {[base]package} --explicit-package-bases

[testenv:pip-missing-reqs]
basepython = {[base]python}
commands =
    mkdir -p tmp
    poetry export -o tmp/requirements.txt
    poetry run pip-missing-reqs --requirements-file tmp/requirements.txt --ignore-file=data/* --ignore-file={[base]package}/tests/* {[base]package}
    rm tmp/requirements.txt

[testenv:docs]
basepython = {[base]python}
commands_pre =
    poetry install --no-root --sync --with test,docs
commands =
    rm -rf doc/build
    poetry run sphinx-build -W --keep-going -b html -j auto docs/source docs/build/html
